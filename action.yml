name: 'send-notifications'
author: '1up-team'
description: 'Send build notifications to Slack channel'

inputs:
  slack-webhook-url:
    description: 'Slack channel webhook URL to report to'
    required: true
  success-message:
    description: 'Slack message to send on success'
    required: false
  failure-message:
    description: 'Slack message to send on failure'
    required: false
  always-notify:
    description: 'Override switch to always send notifications regardless the current branch'
    required: false
    default: 'false'

runs:
  using: composite
  steps:
    - if: always() && (github.ref == 'refs/heads/master' || inputs.always-notify == 'true')
      shell: bash
      run: |
        GIT_COMMIT_MSG=$(git log -1 --pretty=format:'%s')
        GIT_PR=$(echo $GIT_COMMIT_MSG | sed -r 's/.*#([0-9]+).*/\1/')
        GIT_PR_URL="https://github.com/${{ github.repository }}/pull/$GIT_PR"
        [[ "$GIT_PR" =~ ^[0-9]+$ ]] && GIT_PR_MSG="<$GIT_PR_URL|$GIT_COMMIT_MSG>" || GIT_PR_MSG="$GIT_COMMIT_MSG"
        echo "GIT_PR_MSG=$GIT_PR_MSG" >> $GITHUB_ENV

    - if: always() && (github.ref == 'refs/heads/master' || inputs.always-notify == 'true') && github.repository == 'spring-media/1up-bff'
      shell: bash
      run: |
        echo "GIT_ACTIONS_URL=<https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|1up-bff / ${{ env.SERVICE_NAME }}>" >> $GITHUB_ENV

    - if: always() && (github.ref == 'refs/heads/master' || inputs.always-notify == 'true') && github.repository != 'spring-media/1up-bff'
      shell: bash
      run: |
        GIT_REPO_NAME="${{ github.repository }}"
        echo "GIT_ACTIONS_URL=<https://github.com/${GIT_REPO_NAME}/actions/runs/${{ github.run_id }}|${GIT_REPO_NAME#*/}>" >> $GITHUB_ENV

    - if: always() && (github.ref == 'refs/heads/master' || inputs.always-notify == 'true')
      shell: bash
      env:
        SUCCESS_PARAM: '${{ inputs.success-message }}'
        FAILURE_PARAM: '${{ inputs.failure-message }}'
      run: |
        SUCCESS_FALLBACK='${{ env.GIT_ACTIONS_URL }} deployed successfully! ${{ env.GIT_PR_MSG }}'
        FAILURE_FALLBACK=':boom: ${{ env.GIT_ACTIONS_URL }} failed! ${{ env.GIT_PR_MSG }}'
        SUCCESS_MESSAGE=${SUCCESS_PARAM:-$SUCCESS_FALLBACK}
        FAILURE_MESSAGE=${FAILURE_PARAM:-$FAILURE_FALLBACK}
        echo "SUCCESS_MESSAGE=$SUCCESS_MESSAGE" >> $GITHUB_ENV
        echo "FAILURE_MESSAGE=$FAILURE_MESSAGE" >> $GITHUB_ENV

    - name: Report - success [on master]
      if: success() && (github.ref == 'refs/heads/master' || inputs.always-notify == 'true')
      uses: slackapi/slack-github-action@v1
      env:
        SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
        SLACK_WEBHOOK_URL: ${{ inputs.slack-webhook-url }}
      with:
        payload: |
          {
            "attachments": [{
              "color": "#2eb886",
              "blocks": [{
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": ${{ toJSON(env.SUCCESS_MESSAGE) }}
                }
              }]
            }]
          }

    - name: Report - failure [on master]
      if: failure() && (github.ref == 'refs/heads/master' || inputs.always-notify == 'true')
      uses: slackapi/slack-github-action@v1
      env:
        SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
        SLACK_WEBHOOK_URL: ${{ inputs.slack-webhook-url }}
      with:
        payload: |
          {
            "attachments": [{
              "color": "#ed2f00",
              "blocks": [{
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": ${{ toJSON(env.FAILURE_MESSAGE) }}
                }
              }]
            }]
          }
